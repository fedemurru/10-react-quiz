{"ast":null,"code":"var _jsxFileName = \"/Users/federicomurru/Desktop/WA/React WA/projects/10-react-quiz/src/components/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useReducer } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Loader from \"./Loader\";\nimport Error from \"./Error\";\nimport StartScreen from \"./StartScreen\";\nimport Question from \"./Question\";\nimport NextButton from \"./NextButton\";\nimport Progress from \"./Progress\";\nimport FinishScreen from \"./FinishScreen\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  questions: [],\n  // loding, error, ready, active, finished,\n  status: \"loading\",\n  index: 0,\n  answer: null,\n  points: 0\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"dataReceived\":\n      return {\n        ...state,\n        questions: action.payload,\n        status: \"ready\"\n      };\n    case \"dataFailed\":\n      return {\n        ...state,\n        status: \"error\"\n      };\n    case \"start\":\n      return {\n        ...state,\n        status: \"active\"\n      };\n    case \"newAnswer\":\n      const question = state.questions.at(state.index);\n      return {\n        ...state,\n        answer: action.payload,\n        points: action.payload === question.correctOption ? state.points + question.points : state.points\n      };\n    case \"nextQuestion\":\n      return {\n        ...state,\n        index: state.index + 1,\n        answer: null\n      };\n    case \"finish\":\n      return {\n        ...state,\n        index: \"finished\"\n      };\n    default:\n      throw new Error(\"action unknown\");\n  }\n}\nexport default function App() {\n  _s();\n  const [{\n    questions,\n    status,\n    index,\n    answer,\n    points\n  }, dispatch] = useReducer(reducer, initialState);\n  const numQuestions = questions.length;\n  const maxPossiblePoints = questions.reduce((prev, cur) => prev + cur.points, 0);\n  useEffect(function () {\n    fetch(\"http://localhost:8000/questions\").then(res => res.json()).then(data => dispatch({\n      type: \"dataReceived\",\n      payload: data\n    })).catch(err => dispatch({\n      type: \"dataFailed\"\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      className: \"main\",\n      children: [status === \"loading\" && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 30\n      }, this), status === \"error\" && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 28\n      }, this), status === \"ready\" && /*#__PURE__*/_jsxDEV(StartScreen, {\n        dispatch: dispatch,\n        numQuestions: numQuestions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 6\n      }, this), status === \"active\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Progress, {\n          index: index,\n          points: points,\n          numQuestions: numQuestions,\n          maxPossiblePoints: maxPossiblePoints,\n          answer: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Question, {\n          question: questions[index],\n          dispatch: dispatch,\n          answer: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n          dispatch: dispatch,\n          numQuestion: numQuestions,\n          index: index,\n          answer: answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true), status === \"finished\" && /*#__PURE__*/_jsxDEV(FinishScreen, {\n        points: points,\n        maxPossiblePoints: maxPossiblePoints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"0OEOIqjdcb8TdctxTjYZDs56r3E=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useReducer","Header","Main","Loader","Error","StartScreen","Question","NextButton","Progress","FinishScreen","jsxDEV","_jsxDEV","Fragment","_Fragment","initialState","questions","status","index","answer","points","reducer","state","action","type","payload","question","at","correctOption","App","_s","dispatch","numQuestions","length","maxPossiblePoints","reduce","prev","cur","fetch","then","res","json","data","catch","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","numQuestion","_c","$RefreshReg$"],"sources":["/Users/federicomurru/Desktop/WA/React WA/projects/10-react-quiz/src/components/App.js"],"sourcesContent":["import { useEffect, useReducer } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Loader from \"./Loader\";\nimport Error from \"./Error\";\nimport StartScreen from \"./StartScreen\";\nimport Question from \"./Question\";\nimport NextButton from \"./NextButton\";\nimport Progress from \"./Progress\";\nimport FinishScreen from \"./FinishScreen\";\n\nconst initialState = {\n\tquestions: [],\n\n\t// loding, error, ready, active, finished,\n\tstatus: \"loading\",\n\tindex: 0,\n\tanswer: null,\n\tpoints: 0,\n};\n\nfunction reducer(state, action) {\n\tswitch (action.type) {\n\t\tcase \"dataReceived\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tquestions: action.payload,\n\t\t\t\tstatus: \"ready\",\n\t\t\t};\n\t\tcase \"dataFailed\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus: \"error\",\n\t\t\t};\n\t\tcase \"start\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus: \"active\",\n\t\t\t};\n\t\tcase \"newAnswer\":\n\t\t\tconst question = state.questions.at(state.index);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tanswer: action.payload,\n\t\t\t\tpoints:\n\t\t\t\t\taction.payload === question.correctOption\n\t\t\t\t\t\t? state.points + question.points\n\t\t\t\t\t\t: state.points,\n\t\t\t};\n\n\t\tcase \"nextQuestion\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tindex: state.index + 1,\n\t\t\t\tanswer: null,\n\t\t\t};\n\t\tcase \"finish\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tindex: \"finished\",\n\t\t\t};\n\n\t\tdefault:\n\t\t\tthrow new Error(\"action unknown\");\n\t}\n}\n\nexport default function App() {\n\tconst [{ questions, status, index, answer, points }, dispatch] = useReducer(\n\t\treducer,\n\t\tinitialState\n\t);\n\n\tconst numQuestions = questions.length;\n\tconst maxPossiblePoints = questions.reduce(\n\t\t(prev, cur) => prev + cur.points,\n\t\t0\n\t);\n\n\tuseEffect(function () {\n\t\tfetch(\"http://localhost:8000/questions\")\n\t\t\t.then((res) => res.json())\n\t\t\t.then((data) => dispatch({ type: \"dataReceived\", payload: data }))\n\t\t\t.catch((err) => dispatch({ type: \"dataFailed\" }));\n\t}, []);\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<Header />\n\n\t\t\t<Main className=\"main\">\n\t\t\t\t{status === \"loading\" && <Loader />}\n\t\t\t\t{status === \"error\" && <Error />}\n\t\t\t\t{status === \"ready\" && (\n\t\t\t\t\t<StartScreen dispatch={dispatch} numQuestions={numQuestions} />\n\t\t\t\t)}\n\t\t\t\t{status === \"active\" && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Progress\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\tpoints={points}\n\t\t\t\t\t\t\tnumQuestions={numQuestions}\n\t\t\t\t\t\t\tmaxPossiblePoints={maxPossiblePoints}\n\t\t\t\t\t\t\tanswer={answer}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Question\n\t\t\t\t\t\t\tquestion={questions[index]}\n\t\t\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\t\t\tanswer={answer}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<NextButton\n\t\t\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\t\t\tnumQuestion={numQuestions}\n\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\tanswer={answer}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t{status === \"finished\" && (\n\t\t\t\t\t<FinishScreen points={points} maxPossiblePoints={maxPossiblePoints} />\n\t\t\t\t)}\n\t\t\t</Main>\n\t\t</div>\n\t);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}